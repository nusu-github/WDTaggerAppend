
[project]
name = "wd_tagger_append"
version = "0.1.0"
description = "Fine-tuning and deployment toolkit for WD Tagger image tagging models"
readme = "README.md"
requires-python = ">=3.10"
license = "MIT OR Apache-2.0"
keywords = [
  "deep-learning",
  "image-tagging",
  "pytorch",
  "transformers",
  "lora",
  "huggingface",
]
classifiers = [
  "Development Status :: 2 - Pre-Alpha",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: Apache Software License",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "Topic :: Scientific/Engineering :: Image Recognition",
]
dependencies = [
  "accelerate>=1.10.1",
  "bitsandbytes>=0.48.1",
  "datasets[vision]>=4.2.0",
  "evaluate>=0.4.6",
  "huggingface-hub[hf_xet,hf_transfer]>=0.35.3",
  "numpy>=2.2.6",
  "pandas>=2.3.3",
  "pathvalidate>=3.2.0",
  "peft>=0.17.1",
  "pillow>=11.3.0",
  "timm>=1.0.20",
  "torch>=2.8.0",
  "torchmetrics>=1.8.2",
  "torchvision>=0.23.0",
  "tqdm>=4.67.1",
  "transformers>=4.57.0",
  "typer>=0.19.2",
  "wandb>=0.22.2",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.uv.sources]
torch = [
  { index = "pytorch-cu128", marker = "sys_platform == 'linux' or sys_platform == 'win32'" },
  { index = "pytorch-cpu", marker = "sys_platform != 'linux' and sys_platform != 'win32'" },
]

[[tool.uv.index]]
name = "pytorch-cpu"
url = "https://download.pytorch.org/whl/cpu"
explicit = true

[[tool.uv.index]]
name = "pytorch-cu128"
url = "https://download.pytorch.org/whl/cu128"
explicit = true

[project.scripts]
wd-tagger-prepare = "wd_tagger_append.prepare_dataset:app"
wd-tagger-infer = "wd_tagger_append.infer:app"
wd-tagger-train = "wd_tagger_append.train:app"

[project.optional-dependencies]
schedulefree = ["schedulefree>=1.4.1"]
liger-kernel = ["liger-kernel>=0.6.2"]

[dependency-groups]
dev = ["coverage>=7.11.0", "pyright>=1.1.405", "pytest>=8.4.2", "ruff>=0.13.0"]

[tool.ruff]
include = ["src/**/*.py", "tests/**/*.py", "scripts/**/*.py"]
line-length = 100
target-version = "py310"
output-format = "grouped"

[tool.ruff.lint]
select = [
  "E",  # pycodestyle errors
  "W",  # pycodestyle warnings
  "F",  # pyflakes
  "I",  # isort
  "B",  # flake8-bugbear
  "C4", # flake8-comprehensions
  "UP", # pyupgrade
]
isort = { combine-as-imports = true }

[tool.ruff.format]
line-ending = "lf"

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.pyright]
include = ["src", "tests", "scripts"]
